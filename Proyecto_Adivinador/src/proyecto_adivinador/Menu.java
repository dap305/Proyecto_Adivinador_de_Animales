/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyecto_adivinador;

import java.io.File;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel
 */
public class Menu extends javax.swing.JFrame {
    private Arbol_Binario tree = null;
    JFileChooser seleccionado = new JFileChooser();//atributos para guardar y abrir archivos txt
    File archivo;
    Archivos gestion = new Archivos();
    public static Object[] vecIn;//atributos para capturar el txt
    public static Object[] vecPre;
    public static String[] primerVec;
    
    public Menu(Arbol_Binario tree) {
        initComponents();
        this.tree = tree;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        Iniciar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        File = new javax.swing.JMenu();
        btnCargar = new javax.swing.JMenuItem();
        btnGuardar = new javax.swing.JMenuItem();
        Nuevo = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        Cerrar = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_adivinador/Akinator/Genio1.png"))); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 0, 409, 490));

        Iniciar.setBackground(new java.awt.Color(102, 102, 255));
        Iniciar.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        Iniciar.setText("Iniciar");
        Iniciar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Iniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IniciarActionPerformed(evt);
            }
        });
        getContentPane().add(Iniciar, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 340, 130, 50));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyecto_adivinador/Akinator/Oasis.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 490));

        jMenuBar1.setBackground(new java.awt.Color(102, 102, 255));
        jMenuBar1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 51, 102)));

        File.setBorder(null);
        File.setText("Opciones");
        File.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N

        btnCargar.setBackground(new java.awt.Color(102, 102, 255));
        btnCargar.setText("Cargar Árbol");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });
        File.add(btnCargar);

        btnGuardar.setBackground(new java.awt.Color(102, 102, 255));
        btnGuardar.setText("Guardar Árbol");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        File.add(btnGuardar);

        Nuevo.setBackground(new java.awt.Color(102, 102, 255));
        Nuevo.setText("Iniciar nuevo Árbol");
        Nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoActionPerformed(evt);
            }
        });
        File.add(Nuevo);

        jMenuItem3.setBackground(new java.awt.Color(102, 102, 255));
        jMenuItem3.setText("Imprimir Árbol");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        File.add(jMenuItem3);

        Cerrar.setBackground(new java.awt.Color(102, 102, 255));
        Cerrar.setText("Cerrar");
        Cerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CerrarActionPerformed(evt);
            }
        });
        File.add(Cerrar);

        jMenuBar1.add(File);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IniciarActionPerformed
        // TODO add your handling code here:
        //Se inicia una ronda con el genio
        if (Preguntas.tree != null)  //Por si se cargo un arbol del archivo de texto y el arbol en preguntas sigue siendo vacio
            tree = Preguntas.tree; //Se actualiza el arbol conseguido de la ronda con el genio
        else if( tree == null){
            JOptionPane.showMessageDialog(null, "Por favor, inicialice o cargue un arbol");
        }
        if (tree != null) { 
            Preguntas p = new Preguntas(tree);
            p.setVisible(true);
        }
    }//GEN-LAST:event_IniciarActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        if (Preguntas.tree != null)  //Por si se cargo un arbol del archivo de texto y el arbol en preguntas sigue siendo vacio
        tree = Preguntas.tree; //Se actualiza el arbol conseguido de la ronda con el genio
        else if( tree == null){
            JOptionPane.showMessageDialog(null, "Por favor, inicialice o cargue un arbol");
        }
        if (tree != null) {
            Imprimir p = new Imprimir(tree);
            p.setVisible(true);
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void NuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoActionPerformed
        // TODO add your handling code here:
        //Es la opcion para borrar el arbol actual y crear uno desde cero
        boolean flag = true;
        String animal = "";

        while( flag ){
            try{

                animal = JOptionPane.showInputDialog("¿Cúal sera el animal inicial?");
                if (animal.isEmpty()) {
                    JOptionPane.showMessageDialog(null, "Por favor, diga el animal");
                } else
                flag = false;

            } catch( NullPointerException e){
                JOptionPane.showMessageDialog(null, "Por favor, diga el animal");
            }
        }

        tree = new Arbol_Binario("Nuevo");
        Preguntas.tree = null;
        tree.insertarRoot(animal);
    }//GEN-LAST:event_NuevoActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed

        //cada vez que se le da a cargar, tanto el arbol de menu como el arbol de la ventana de preguntas se colocan en nulo.
        //esto es por si hizo alguna partida antes de darle a cargar, para que el juego digamos se "reinicie" y se cargue lo que se desea unicamente
        tree=null;
        Preguntas.tree=null;

        if(seleccionado.showDialog(this, "Abrir archivo")== JFileChooser.APPROVE_OPTION){
            archivo = seleccionado.getSelectedFile();
            if(archivo.canRead()){
                if(archivo.getName().endsWith("txt")){
                    //si todo esta bien entonces tomamos el txt, lo convertimos en vector, para luego mediante el metodo capturarTxt
                    //convertirlo en dos vectores y con eso recurrir al metodo CrearArbol_Inorden_Preorden que creara exactamente el arbol que se guardó.
                    String contenido = gestion.abrirTexto(archivo);
                    primerVec = contenido.split(",");
                    vecIn = new Object[(primerVec.length-1)/2];
                    vecPre = new Object[(primerVec.length-1)/2];
                    Archivos.capturarTxt(primerVec, vecIn, vecPre);
                    tree= Metodos.CrearArbol_Inorden_Preorden(tree, vecIn, vecPre);

                }else{
                    JOptionPane.showMessageDialog(null, "Archivo no válido, intente de nuevo.", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnCargarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed

        //lo que dice el joptionpane explica la razon de esta validacion
        if(tree==null){
            JOptionPane.showMessageDialog(this, "Para guardar una partida debes empezar una primero.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            //creo una cadena en inorden y en preorden del arbol
            tree.InOrder2(tree.getRoot());
            tree.PreOrder2(tree.getRoot());
            JOptionPane.showMessageDialog(this, "Recuerda guardar el archivo en formato txt, de otro modo arrojará error.", "Importante!", JOptionPane.INFORMATION_MESSAGE);
            //se guarda, con sus validaciones
            if(seleccionado.showDialog(null, "Guardar archivo") == JFileChooser.APPROVE_OPTION){
                archivo = seleccionado.getSelectedFile();
                if(archivo.getName().endsWith("txt")){
                    String contenido = Arbol_Binario.cadenaInor + "*,"+ Arbol_Binario.cadenaPreor;
                    String respuesta = gestion.guardarTexto(archivo, contenido);
                    if(respuesta!=null){
                        JOptionPane.showMessageDialog(null, respuesta);
                    }else{
                        JOptionPane.showMessageDialog(null, "Error al guardar el archivo, pruebe de nuevo.", "Error!", JOptionPane.ERROR_MESSAGE);
                    }
                }else{
                    JOptionPane.showMessageDialog(null, "El archivo debe ser en formato txt, pruebe de nuevo.", "Error!", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void CerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CerrarActionPerformed
        // TODO add your handling code here:
        String currentDir = System.getProperty("user.dir");
         if(tree==null){
            JOptionPane.showMessageDialog(this, "Skere.", "Error", JOptionPane.ERROR_MESSAGE);
        }else{
            //creo una cadena en inorden y en preorden del arbol
            tree.InOrder2(tree.getRoot());
            tree.PreOrder2(tree.getRoot());
   
            //se guarda, con sus validaciones

                archivo = new File(currentDir+"\\src\\proyecto_adivinador\\Principal.txt");
           
                    String contenido = Arbol_Binario.cadenaInor + "*,"+ Arbol_Binario.cadenaPreor;
                    String respuesta = gestion.guardarTexto(archivo, contenido);
            }
        this.dispose();
    }//GEN-LAST:event_CerrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
  
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Cerrar;
    private javax.swing.JMenu File;
    private javax.swing.JButton Iniciar;
    private javax.swing.JMenuItem Nuevo;
    private javax.swing.JMenuItem btnCargar;
    private javax.swing.JMenuItem btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem3;
    // End of variables declaration//GEN-END:variables
}
